{
  "name": "advanced-react-boilerplate",
  "version": "0.0.1",
  "description": "react starter project",
  "main": "src/index.js",
  "repository": "git@github.com:jasonwarta/advanced-react-boilerplate.git",
  "author": "Jason Warta <jasonwarta@gmail.com>",
  "license": "MIT",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.3",
    "babel-eslint": "^8.2.3",
    "babel-plugin-root-import": "^6.0.0",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-es2015-classes": "^6.24.1",
    "babel-plugin-transform-react-jsx": "^6.24.1",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-polyfill": "^6.26.0",
    "babel-preset-airbnb": "^2.5.1",
    "babel-preset-env": "^1.7.0",
    "babel-preset-stage-0": "^6.24.1",
    "eslint": "^4.19.1",
    "eslint-config-airbnb": "^17.0.0",
    "eslint-import-resolver-babel-plugin-root-import": "^1.1.1",
    "eslint-plugin-import": "^2.12.0",
    "eslint-plugin-jsx-a11y": "^6.0.3",
    "eslint-plugin-react": "^7.9.1",
    "node-sass": "^4.9.0",
    "parcel": "^1.9.2",
    "parcel-bundler": "^1.9.2",
    "react-dev-utils": "^5.0.1"
  },
  "dependencies": {
    "@fortawesome/fontawesome": "^1.1.8",
    "@fortawesome/fontawesome-free-brands": "^5.0.13",
    "@fortawesome/fontawesome-free-regular": "^5.0.13",
    "@fortawesome/fontawesome-free-solid": "^5.0.13",
    "@fortawesome/fontawesome-svg-core": "^1.2.0",
    "@fortawesome/react-fontawesome": "^0.1.0",
    "@material-ui/core": "^1.2.3",
    "@material-ui/icons": "^1.1.0",
    "apollo-boost": "^0.1.10",
    "apollo-client": "^2.3.5",
    "body-parser": "^1.18.3",
    "compression": "^1.7.2",
    "dateformat": "^3.0.3",
    "express": "^4.16.3",
    "graphql": "^0.13.2",
    "graphql-tag": "^2.9.2",
    "lodash": "^4.17.10",
    "material-ui": "^0.20.1",
    "path": "^0.12.7",
    "prop-types": "^15.6.2",
    "react": "^15.4.0 || ^16.0.0",
    "react-apollo": "^2.1.6",
    "react-dom": "^15.4.0 || ^16.0.0",
    "react-router": "^4.3.1",
    "react-router-dom": "^4.3.1"
  },
  "scripts": {
    "watch": "./node_modules/.bin/parcel watch src/index.html",
    "start": "nodemon --exec babel-node ./server.js dev",
    "start:dev": "yarn start",
    "start:test": "nodemon --exec babel-node ./server.js test",
    "start:prod": "nodemon --exec babel-node ./server.js prod",
    "build:dev": "./node_modules/.bin/parcel build server.js server_utils/* --out-dir dev --target node && ./node_modules/.bin/parcel build src/index.html --out-dir dev/dist && mkdir -p dev/config && cp -v config/config.dev.json dev/config && mkdir -p dev/config_server && cp -v config/config.dev.json dev/config_server",
    "build:test": "./node_modules/.bin/parcel build server.js server_utils/* --out-dir test --target node && ./node_modules/.bin/parcel build src/index.html --out-dir test/dist && mkdir -p test/config && cp -v config/config.test.json test/config && mkdir -p test/config_server && cp -v config/config.test.json test/config_server",
    "build:prod": "./node_modules/.bin/parcel build server.js server_utils/* --out-dir prod --target node && ./node_modules/.bin/parcel build src/index.html --out-dir prod/dist && mkdir -p prod/config && cp -v config/config.prod.json prod/config && mkdir -p prod/config_server && cp -v config/config.prod.json prod/config_server",
    "serve:dev": "node dev/server.js dev",
    "serve:test": "node test/server.js test",
    "serve:prod": "node prod/server.js prod"
  }
}
